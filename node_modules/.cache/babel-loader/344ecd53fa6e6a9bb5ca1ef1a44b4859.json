{"ast":null,"code":"import{SEARCH_MOVIE,FETCH_MOVIES,FETCH_MOVIE,LOADING}from'./types';import axios from'axios';import{APIKey}from'../components/APIKey';export var searchMovie=function searchMovie(text){return function(dispatch){dispatch({type:SEARCH_MOVIE,payload:text});};};export var fetchMovies=function fetchMovies(text){return function(dispatch){axios.get(\"http://www.omdbapi.com/?apikey=\".concat(APIKey,\"&s=\").concat(text)).then(function(response){return dispatch({type:FETCH_MOVIES,payload:response.data});}).catch(function(err){return console.log(err);});};};export var fetchMovie=function fetchMovie(id){return function(dispatch){axios.get(\"http://www.omdbapi.com/?apikey=\".concat(APIKey,\"&i=\").concat(id)).then(function(response){return dispatch({type:FETCH_MOVIE,payload:response.data});}).catch(function(err){return console.log(err);});};};export var setLoading=function setLoading(){return{type:LOADING};};","map":{"version":3,"sources":["D:\\work\\movieSerialCode\\movie-serial-info\\src\\actions\\saerchActions.js"],"names":["SEARCH_MOVIE","FETCH_MOVIES","FETCH_MOVIE","LOADING","axios","APIKey","searchMovie","text","dispatch","type","payload","fetchMovies","get","then","response","data","catch","err","console","log","fetchMovie","id","setLoading"],"mappings":"AAAA,OAASA,YAAT,CAAuBC,YAAvB,CAAqCC,WAArC,CAAkDC,OAAlD,KAAiE,SAAjE,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,sBAAvB,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,IAAI,QAAI,UAAAC,QAAQ,CAAI,CAC3CA,QAAQ,CAAC,CACLC,IAAI,CAAET,YADD,CAELU,OAAO,CAAEH,IAFJ,CAAD,CAAR,CAIH,CAL8B,EAAxB,CAOP,MAAO,IAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAJ,IAAI,QAAI,UAAAC,QAAQ,CAAI,CAC3CJ,KAAK,CAACQ,GAAN,0CAA4CP,MAA5C,eAAwDE,IAAxD,GACKM,IADL,CACU,SAAAC,QAAQ,QAAIN,CAAAA,QAAQ,CAAC,CACvBC,IAAI,CAAER,YADiB,CAEvBS,OAAO,CAAEI,QAAQ,CAACC,IAFK,CAAD,CAAZ,EADlB,EAKKC,KALL,CAKW,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EALd,EAMH,CAP8B,EAAxB,CASP,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,EAAE,QAAI,UAAAb,QAAQ,CAAI,CACxCJ,KAAK,CAACQ,GAAN,0CAA4CP,MAA5C,eAAwDgB,EAAxD,GACKR,IADL,CACU,SAAAC,QAAQ,QAAIN,CAAAA,QAAQ,CAAC,CACvBC,IAAI,CAAEP,WADiB,CAEvBQ,OAAO,CAAEI,QAAQ,CAACC,IAFK,CAAD,CAAZ,EADlB,EAKKC,KALL,CAKW,SAAAC,GAAG,QAAIC,CAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ,EALd,EAMH,CAP2B,EAArB,CASP,MAAO,IAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAC5B,MAAO,CACHb,IAAI,CAAEN,OADH,CAAP,CAGH,CAJM","sourcesContent":["import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from './types';\r\nimport axios from 'axios';\r\nimport { APIKey } from '../components/APIKey';\r\n\r\nexport const searchMovie = text => dispatch => {\r\n    dispatch({\r\n        type: SEARCH_MOVIE,\r\n        payload: text\r\n    });\r\n}\r\n\r\nexport const fetchMovies = text => dispatch => {\r\n    axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\r\n        .then(response => dispatch({\r\n            type: FETCH_MOVIES,\r\n            payload: response.data\r\n        }))\r\n        .catch(err => console.log(err))\r\n};\r\n\r\nexport const fetchMovie = id => dispatch => {\r\n    axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\r\n        .then(response => dispatch({\r\n            type: FETCH_MOVIE,\r\n            payload: response.data\r\n        }))\r\n        .catch(err => console.log(err))\r\n};\r\n\r\nexport const setLoading = () => {\r\n    return {\r\n        type: LOADING\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}