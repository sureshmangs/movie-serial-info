{"ast":null,"code":"import _defineProperty from \"D:\\\\work\\\\movie-serial-info\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from '../actions/types';\nconst initialState = {\n  text: '',\n  movies: [],\n  loading: false,\n  movie: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SEARCH_MOVIE:\n      return _objectSpread({}, state, {\n        text: action.payload,\n        laoding: false\n      });\n\n    case FETCH_MOVIES:\n      return _objectSpread({}, state, {\n        movies: action.payload,\n        loading: false\n      });\n\n    case FETCH_MOVIE:\n      return _objectSpread({}, state, {\n        movie: action.payload,\n        loading: false\n      });\n\n    case LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:\\work\\movie-serial-info\\src\\reducers\\searchReducer.js"],"names":["SEARCH_MOVIE","FETCH_MOVIES","FETCH_MOVIE","LOADING","initialState","text","movies","loading","movie","state","action","type","payload","laoding"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,YAAvB,EAAqCC,WAArC,EAAkDC,OAAlD,QAAiE,kBAAjE;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,MAAM,EAAE,EAFS;AAGjBC,EAAAA,OAAO,EAAE,KAHQ;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,YAAL;AACI,+BACOS,KADP;AAEIJ,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAFjB;AAGIC,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKZ,YAAL;AACI,+BACOQ,KADP;AAEIH,QAAAA,MAAM,EAAEI,MAAM,CAACE,OAFnB;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKL,WAAL;AACI,+BACOO,KADP;AAEID,QAAAA,KAAK,EAAEE,MAAM,CAACE,OAFlB;AAGIL,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKJ,OAAL;AACI,+BACOM,KADP;AAEIF,QAAAA,OAAO,EAAE;AAFb;;AAIJ;AACI,aAAOE,KAAP;AAzBR;AA2BH","sourcesContent":["import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from '../actions/types';\r\n\r\nconst initialState = {\r\n    text: '',\r\n    movies: [],\r\n    loading: false,\r\n    movie: []\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SEARCH_MOVIE:\r\n            return {\r\n                ...state,\r\n                text: action.payload,\r\n                laoding: false\r\n            };\r\n        case FETCH_MOVIES:\r\n            return {\r\n                ...state,\r\n                movies: action.payload,\r\n                loading: false\r\n            };\r\n        case FETCH_MOVIE:\r\n            return {\r\n                ...state,\r\n                movie: action.payload,\r\n                loading: false\r\n            };\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}